@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

interface Callable<V> << interface >> {
  + call(): V
}
interface Comparable<T> << interface >> {
  + compareTo(T): int
}
class CustomExecutor {
  + CustomExecutor(): 
  + submit(Task<V>): Task<V>
  - submitTask(Task<?>): void
  + gracefullyTerminate(): void
  + submit(Callable<T>, TaskType): Task<T>
   currentMax: String
}
class Task<V> {
  + Task(Callable<V>, TaskType): 
  + Task(Callable<V>): 
  - future: Future<V>
  - Type: TaskType
  + get(): V
  + compareTo(Task): int
  + call(): V
  + createTask(Callable<V>, TaskType): Task<V>
  + get(long, TimeUnit): V
   Type: TaskType
   future: Future<V>
}
enum TaskType << enumeration >> {
  - TaskType(int): 
  + values(): TaskType[]
  + valueOf(String): TaskType
  - validatePriority(int): boolean
   priority: int
   type: TaskType
   priorityValue: int
}

Task            -[#008200,dashed]-^  Callable       
Task           "1" *-[#595959,plain]-> "operation\n1" Callable       
Task            -[#008200,dashed]-^  Comparable     
Task           "1" *-[#595959,plain]-> "Type\n1" TaskType       
TaskType        -[#008200,dashed]-^  Comparable     
@enduml
